/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mixregui;

import def_lib.DefinitionHelper;
import java.awt.Desktop;
import java.net.URL;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import def_lib.DefinitionHelper;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.ComponentOrientation;
import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import java.awt.Insets;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JCheckBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JSeparator;
import javax.swing.SwingConstants;
import static javax.swing.SwingConstants.CENTER;
import javax.swing.border.MatteBorder;

/**
 *d
 * @author adityaponnada
 */
public class mixregGUI extends javax.swing.JFrame {
    
   NewModel newModel;
   advancedOptions advancedOptions_view;
   stageOneRegs stage_1_regs;
   stageTwoRegs stage_2_regs;
    
   //public boolean submitClicked = true;
   int i;
   
   int levelOneRegSize, levelTwoRegSize, stageTwoRegSize, levelOneDisaggSize;
   
   String[] variableNamesCombo;
    
    DefaultComboBoxModel<String> IDList;
    
    DefaultComboBoxModel<String> StageOneList;
    
    DefaultComboBoxModel<String> StageTwoList;
    
    DefaultListModel<String> savedVariablesStageOne;
    
    DefaultComboBoxModel<String> regressorsLevelOne;
    
    DefaultComboBoxModel<String> regressorsLevelTwo;
    
    ArrayList<ArrayList<JCheckBox>> levelOneBoxes;
    
    ArrayList<ArrayList<JCheckBox>> levelTwoBoxes;
    
    ArrayList<ArrayList<JCheckBox>> stageTwoBoxes;
    
    ArrayList<ArrayList<JCheckBox>> disaggVarianceBoxes;
    
    int stageOneClicked = 0;

    /**
     * Creates new form mixregGUI
     */
    
    public mixregGUI() {
        initComponents();
        newModel = new NewModel();
        variableNamesCombo = newModel.getVariableNames();
        
        IDList = new DefaultComboBoxModel<String>();
        StageOneList = new DefaultComboBoxModel<String>();
        StageTwoList = new DefaultComboBoxModel<String>();
        
        i = newModel.getRLE();
        System.out.println(String.valueOf(i));
       
        
        if (i >1){
        associationPanel.setVisible(false);
        NoAssociationRadio.setVisible(false);
        LinearAssociationRadio.setVisible(false);
        QuadraticAssociationRadio.setVisible(false);
        associationLabel.setVisible(false);
        
        level1_BSVar.setText("Loc. eff.");
        level1_WSVar.setText("Scale");
        level2_BSVar.setText("Loc. eff.");
        level2_WSVar.setText("Scale");
        stage2_BSVar.setText("Loc. eff.");
        stage2_WSVar.setText("Scale");

        }
        
        //levelOneBorderLayout.add(levelOneGrid);
        jPanel5.setLayout(new BorderLayout());
        jPanel6.setLayout(new BorderLayout());
        jPanel7.setLayout(new BorderLayout());
        
        
      //  System.out.println("Initialized");
       // enableDisaggVariance();
      // MyThread mt = new MyThread();
       //mt.start();
       
       if (stageOneClicked == 0){
       
       addStageTwoButton.setEnabled(false);
       
        } else {
       
           addStageTwoButton.setEnabled(true);
       }
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jSeparator5 = new javax.swing.JSeparator();
        parentPanel = new javax.swing.JPanel();
        imageView = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        stageOneTabs = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        IDvariableCombo = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        StageOneVariableCombo = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        StageTwoVariableCombo = new javax.swing.JComboBox<>();
        addStageOneButton = new javax.swing.JButton();
        addStageTwoButton = new javax.swing.JButton();
        advancedOptionsButton = new javax.swing.JButton();
        runStageOneTwoButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        goBackMxrButton = new javax.swing.JButton();
        associationPanel = new javax.swing.JPanel();
        associationLabel = new javax.swing.JLabel();
        NoAssociationRadio = new javax.swing.JRadioButton();
        LinearAssociationRadio = new javax.swing.JRadioButton();
        QuadraticAssociationRadio = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        level1_MeanReg = new javax.swing.JLabel();
        level1_WSVar = new javax.swing.JLabel();
        level2_MeanReg = new javax.swing.JLabel();
        level2_BSVar = new javax.swing.JLabel();
        level2_WSVar = new javax.swing.JLabel();
        stage2_MeanReg = new javax.swing.JLabel();
        stage2_BSVar = new javax.swing.JLabel();
        stage2_WSVar = new javax.swing.JLabel();
        stageTwoGrid = new javax.swing.JPanel();
        jSeparator2 = new javax.swing.JSeparator();
        level1_BSVar = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        levelOneGrid = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jPanel6 = new javax.swing.JPanel();
        levelTwoGrid = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        newModelMenu = new javax.swing.JMenuItem();
        modifyStageOneMenu = new javax.swing.JMenuItem();
        modifyStageTwoMenu = new javax.swing.JMenuItem();
        exitMenu = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        diagramMenu = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Mix Suite");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        parentPanel.setLayout(new java.awt.CardLayout());

        imageView.setBackground(new java.awt.Color(255, 255, 255));
        imageView.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel16.setBackground(new java.awt.Color(255, 255, 255));
        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/mixreg.png"))); // NOI18N
        imageView.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(106, 70, 840, 450));

        parentPanel.add(imageView, "card3");

        stageOneTabs.setFocusTraversalKeysEnabled(false);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("ID Variable:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 32, -1, -1));

        IDvariableCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        IDvariableCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDvariableComboActionPerformed(evt);
            }
        });
        jPanel1.add(IDvariableCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 30, 203, -1));

        jLabel2.setText("Stage 1 DV:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 71, -1, -1));

        StageOneVariableCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        StageOneVariableCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StageOneVariableComboActionPerformed(evt);
            }
        });
        jPanel1.add(StageOneVariableCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 70, 203, -1));

        jLabel3.setText("Stage 2 DV:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 116, -1, -1));

        StageTwoVariableCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel1.add(StageTwoVariableCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 110, 203, -1));

        addStageOneButton.setText("Add Stage 1 Regressors ...");
        addStageOneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStageOneButtonActionPerformed(evt);
            }
        });
        jPanel1.add(addStageOneButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 160, 225, 35));

        addStageTwoButton.setText("Add Stage 2 Regressors ...");
        addStageTwoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStageTwoButtonActionPerformed(evt);
            }
        });
        jPanel1.add(addStageTwoButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 200, 225, 35));

        advancedOptionsButton.setText("Advanced Options ...");
        advancedOptionsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                advancedOptionsButtonActionPerformed(evt);
            }
        });
        jPanel1.add(advancedOptionsButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 240, 225, 37));

        runStageOneTwoButton.setText("Run Stage 1 + 2");
        runStageOneTwoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runStageOneTwoButtonActionPerformed(evt);
            }
        });
        jPanel1.add(runStageOneTwoButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 520, -1, -1));

        resetButton.setText("Reset");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });
        jPanel1.add(resetButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 520, 135, -1));

        goBackMxrButton.setText("Go Back");
        goBackMxrButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goBackMxrButtonActionPerformed(evt);
            }
        });
        jPanel1.add(goBackMxrButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 520, 147, -1));

        associationPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        associationLabel.setText("<html>Specify the relationship between the <br>random location and within subject variance tested below <br>(i.e. relation between variance and slope) </html>");

        buttonGroup1.add(NoAssociationRadio);
        NoAssociationRadio.setText("No Association");
        NoAssociationRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NoAssociationRadioActionPerformed(evt);
            }
        });

        buttonGroup1.add(LinearAssociationRadio);
        LinearAssociationRadio.setText("Linear Association");

        buttonGroup1.add(QuadraticAssociationRadio);
        QuadraticAssociationRadio.setText("Quadratic Association");

        javax.swing.GroupLayout associationPanelLayout = new javax.swing.GroupLayout(associationPanel);
        associationPanel.setLayout(associationPanelLayout);
        associationPanelLayout.setHorizontalGroup(
            associationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(associationPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(associationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(associationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(associationPanelLayout.createSequentialGroup()
                        .addGroup(associationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(QuadraticAssociationRadio)
                            .addComponent(LinearAssociationRadio)
                            .addComponent(NoAssociationRadio))
                        .addGap(0, 88, Short.MAX_VALUE)))
                .addContainerGap())
        );
        associationPanelLayout.setVerticalGroup(
            associationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(associationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(associationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NoAssociationRadio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LinearAssociationRadio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(QuadraticAssociationRadio)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jPanel1.add(associationPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, -1, 200));

        jLabel4.setText("Between and within subject variance models");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 10, -1, -1));

        level1_MeanReg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        level1_MeanReg.setText("Mean");
        level1_MeanReg.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jPanel1.add(level1_MeanReg, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 100, -1, -1));
        level1_MeanReg.getAccessibleContext().setAccessibleName("");

        level1_WSVar.setText("WS-Var.");
        jPanel1.add(level1_WSVar, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 100, -1, -1));

        level2_MeanReg.setText("Mean");
        jPanel1.add(level2_MeanReg, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 100, -1, -1));

        level2_BSVar.setText("BS-Var.");
        jPanel1.add(level2_BSVar, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 100, -1, -1));

        level2_WSVar.setText("WS-Var.");
        jPanel1.add(level2_WSVar, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 100, -1, -1));

        stage2_MeanReg.setText("Mean");
        jPanel1.add(stage2_MeanReg, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 100, -1, -1));

        stage2_BSVar.setText("BS-Var.");
        jPanel1.add(stage2_BSVar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 100, -1, -1));

        stage2_WSVar.setText("WS-Var.");
        jPanel1.add(stage2_WSVar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 100, -1, -1));

        stageTwoGrid.setLayout(new java.awt.GridLayout(1, 0));
        jPanel1.add(stageTwoGrid, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 130, 270, 360));
        jPanel1.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 570, 1190, 20));

        level1_BSVar.setText("BS-Var.");
        jPanel1.add(level1_BSVar, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 100, -1, -1));

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Level-1 (WS)"));

        levelOneGrid.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(levelOneGrid, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(levelOneGrid, javax.swing.GroupLayout.DEFAULT_SIZE, 366, Short.MAX_VALUE)
        );

        levelOneGrid.getAccessibleContext().setAccessibleName("Level-1");

        jPanel1.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 110, 290, 390));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 70, 540, -1));
        jPanel1.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 70, 350, -1));

        jLabel7.setText("Stage-1 Regressors");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 50, -1, -1));

        jLabel13.setText("Stage-2 Regressors");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 50, -1, -1));
        jPanel1.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 50, -1, 140));

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Level-2 (BS)"));

        levelTwoGrid.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(levelTwoGrid, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 4, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(levelTwoGrid, javax.swing.GroupLayout.DEFAULT_SIZE, 366, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 110, 300, 390));

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Stage-2"));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 278, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 366, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 110, 290, 390));

        jPanel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 306, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 476, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 310, 480));

        stageOneTabs.addTab("Configuration", jPanel1);

        jPanel10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel20.setText("Stage 1 Results Here ...");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(299, 299, 299)
                .addComponent(jLabel20)
                .addContainerGap(377, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(134, 134, 134)
                .addComponent(jLabel20)
                .addContainerGap(207, Short.MAX_VALUE))
        );

        jButton8.setText("Save Output As ...");

        jButton9.setText("Save Stage 1+2 Def File As ...");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(523, 523, 523)
                        .addComponent(jButton9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(181, 181, 181)
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(1116, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton8)
                    .addComponent(jButton9))
                .addContainerGap(554, Short.MAX_VALUE))
        );

        stageOneTabs.addTab("Stage 1 Results", jPanel3);

        jPanel11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel21.setText("Stage 2 Results Here ...");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(399, 399, 399)
                .addComponent(jLabel21)
                .addContainerGap(470, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(127, 127, 127)
                .addComponent(jLabel21)
                .addContainerGap(208, Short.MAX_VALUE))
        );

        jButton10.setText("Save Output As ...");

        jButton11.setText("Save Stage 2 Def File As ...");

        jButton12.setText("Save Stage 1 and 2 Def File As ...");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(192, 192, 192)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton12)
                        .addGap(18, 18, 18)
                        .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(65, 65, 65))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton10)
                    .addComponent(jButton11)
                    .addComponent(jButton12))
                .addContainerGap(568, Short.MAX_VALUE))
        );

        stageOneTabs.addTab("Stage 2 Results", jPanel4);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/mixreg.png"))); // NOI18N

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 854, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, 438, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 80, 850, 450));

        stageOneTabs.addTab("View Model", jPanel2);

        parentPanel.add(stageOneTabs, "card2");

        getContentPane().add(parentPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1224, -1));

        fileMenu.setText("File");

        newModelMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        newModelMenu.setText("New Model");
        newModelMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newModelMenuActionPerformed(evt);
            }
        });
        fileMenu.add(newModelMenu);

        modifyStageOneMenu.setText("Modify Stage 1 and 2");
        modifyStageOneMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyStageOneMenuActionPerformed(evt);
            }
        });
        fileMenu.add(modifyStageOneMenu);

        modifyStageTwoMenu.setText("Modify Stage 2 Only");
        fileMenu.add(modifyStageTwoMenu);

        exitMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        exitMenu.setText("Exit");
        exitMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenu);

        jMenuBar1.add(fileMenu);

        helpMenu.setText("Help");

        diagramMenu.setText("Diagram");
        diagramMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diagramMenuActionPerformed(evt);
            }
        });
        helpMenu.add(diagramMenu);

        jMenuItem6.setText("Guide");
        helpMenu.add(jMenuItem6);

        jMenuItem7.setText("Citations");
        helpMenu.add(jMenuItem7);

        jMenuItem8.setText("Documentation");
        helpMenu.add(jMenuItem8);

        jMenuItem9.setText("About");
        helpMenu.add(jMenuItem9);

        jMenuBar1.add(helpMenu);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void newModelMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newModelMenuActionPerformed
        //new NewModel().setVisible(true);
        
       
       newModel.setVisible(true);
      // imageView.setVisible(false);
        //this.setVisible(false);
    }//GEN-LAST:event_newModelMenuActionPerformed

    private void exitMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuActionPerformed

    private void modifyStageOneMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyStageOneMenuActionPerformed
        isSubmitClicked();
    }//GEN-LAST:event_modifyStageOneMenuActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void diagramMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diagramMenuActionPerformed
        // TODO add your handling code here:
        openWebpage("http://myquitadmin.usc.edu/mixsuite.php");
        
    }//GEN-LAST:event_diagramMenuActionPerformed

    private void goBackMxrButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goBackMxrButtonActionPerformed
        // TODO add your handling code here:
        newModel.setVisible(true);
    }//GEN-LAST:event_goBackMxrButtonActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        // TODO add your handling code here:
        
        IDvariableCombo.setSelectedIndex(0);
        StageOneVariableCombo.setSelectedIndex(1);
        StageTwoVariableCombo.setSelectedIndex(2);
        
        buttonGroup1.clearSelection();
        
        
        addStageTwoButton.setEnabled(false);
      

    }//GEN-LAST:event_resetButtonActionPerformed

    private void runStageOneTwoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runStageOneTwoButtonActionPerformed
        
        int tryCount = 0;
        int catchCount = 0;
        
        System.out.println("Total selected beta means model in level one: " + String.valueOf(countLevelOneBeta()));
        System.out.println("Total selected alpha means model in level one: " + String.valueOf(countLevelOneAlpha()));
        System.out.println("Total selected tau means model in level one: " + String.valueOf(countLevelOneTau()));
        System.out.println("Total selected disagg. variance in level one: " + String.valueOf(countLevelOneDicompMean()));
        
        System.out.println("Total selected beta means model in level two: " + String.valueOf(countLevelTwoBeta()));
        System.out.println("Total selected alpha means model in level two: " + String.valueOf(countLevelTwoAlpha()));
        System.out.println("Total selected tau means model in level two: " + String.valueOf(countLevelTwoTau()));
        
        System.out.println("Total selected beta means model in stage two: " + String.valueOf(countStageTwoBeta()));
        System.out.println("Total selected alpha means model in stage two: " + String.valueOf(countStageTwoAlpha()));
        System.out.println("Total selected tau means model in stage two: " + String.valueOf(countStageTwoTau()));
        
       
        String[] idOutcome = {String.valueOf(IDvariableCombo.getSelectedIndex() + 1), String.valueOf(StageOneVariableCombo.getSelectedIndex() + 1)};

       try {
           tryCount = 1;
           NewModel.defFile.setIdOutcome(idOutcome);
           System.out.println("ID and Outcome indices: " + Arrays.toString(NewModel.defFile.getIdOutcome()));
       } catch (Exception ex) {
           catchCount = 1;
           Logger.getLogger(mixregGUI.class.getName()).log(Level.SEVERE, null, ex);
           JOptionPane.showMessageDialog(null, ex.getMessage(), "Caution!", JOptionPane.INFORMATION_MESSAGE);
       }
       
       
       // i is the number of random location effects selected by the users
       if (i ==1) {
       
           try {
            tryCount = 1;
            NewModel.defFile.setDecompBSCount(String.valueOf(countLevelOneDicompBS()));
            System.out.println("BS Variance Regressor Count: " + NewModel.defFile.getDecompBSCount().toString());
       } catch (Exception ex) {
           catchCount = 1;
           Logger.getLogger(mixregGUI.class.getName()).log(Level.SEVERE, null, ex);
           JOptionPane.showMessageDialog(null, ex.getMessage(), "Caution!", JOptionPane.INFORMATION_MESSAGE);
       }
       
       try {
           tryCount = 1;
           NewModel.defFile.setDecompWSCount(String.valueOf(countLevelOneDicompWS()));
           System.out.println("WS Variance Regressor Count: " + NewModel.defFile.getDecompBSCount().toString());
       } catch (Exception ex) {
           catchCount = 1;
           Logger.getLogger(mixregGUI.class.getName()).log(Level.SEVERE, null, ex);
           JOptionPane.showMessageDialog(null, ex.getMessage(), "Caution!", JOptionPane.INFORMATION_MESSAGE);
       }
       
       
       
       if (NoAssociationRadio.isSelected()){
           
               try {
                   NewModel.defFile.setAdvancedEffectMeanWS(String.valueOf(0));
                   System.out.println("Advanced effects of mean on WS variance (No Association): " + NewModel.defFile.getAdvancedEffectMeanWS());
               } catch (Exception ex) {
                   catchCount = 1;
                   Logger.getLogger(mixregGUI.class.getName()).log(Level.SEVERE, null, ex);
                   JOptionPane.showMessageDialog(null, ex.getMessage(), "Caution!", JOptionPane.INFORMATION_MESSAGE);
               }
       
       } else if (LinearAssociationRadio.isSelected()) {
           try {
                   NewModel.defFile.setAdvancedEffectMeanWS(String.valueOf(1));
                   System.out.println("Advanced effects of mean on WS variance (Linear Association): " + NewModel.defFile.getAdvancedEffectMeanWS());
               } catch (Exception ex) {
                   catchCount = 1;
                   Logger.getLogger(mixregGUI.class.getName()).log(Level.SEVERE, null, ex);
                   JOptionPane.showMessageDialog(null, ex.getMessage(), "Caution!", JOptionPane.INFORMATION_MESSAGE);
               }
       
       } else if (QuadraticAssociationRadio.isSelected()) {
           try {
                   NewModel.defFile.setAdvancedEffectMeanWS(String.valueOf(2));
                   System.out.println("Advanced effects of mean on WS variance (Quadratic Association): " + NewModel.defFile.getAdvancedEffectMeanWS());
               } catch (Exception ex) {
                   catchCount = 1;
                   Logger.getLogger(mixregGUI.class.getName()).log(Level.SEVERE, null, ex);
                   JOptionPane.showMessageDialog(null, ex.getMessage(), "Caution!", JOptionPane.INFORMATION_MESSAGE);
               }
       
       }
       
            /*try {
                tryCount = 1;
                NewModel.defFile.setAdvancedEffectMeanWS("0");
                System.out.println("Advanced effects of mean on WS variance: " + NewModel.defFile.getDecompBSCount().toString());
            } catch (Exception ex) {
                catchCount = 1;
                Logger.getLogger(mixregGUI.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, ex.getMessage(), "Caution!", JOptionPane.INFORMATION_MESSAGE);
            }*/
       
       
       } else if (i > 1){
       
       try {
           tryCount = 1;
           NewModel.defFile.setDecompMeanCount(String.valueOf(countLevelOneDicompMean()));
           System.out.println("Decomp Model Mean Count: " + NewModel.defFile.getDecompMeanCount().toString());
       } catch (Exception ex) {
           catchCount = 1;
           Logger.getLogger(mixregGUI.class.getName()).log(Level.SEVERE, null, ex);
           JOptionPane.showMessageDialog(null, ex.getMessage(), "Caution!", JOptionPane.INFORMATION_MESSAGE);
       }
       
       try {
           tryCount = 1;
           NewModel.defFile.setDecompLocRanCount(String.valueOf(countLevelOneDicompBS()));
           System.out.println("Decomp Model Loc Random Count: " + NewModel.defFile.getDecompMeanCount().toString());
       } catch (Exception ex) {
           catchCount = 1;
           Logger.getLogger(mixregGUI.class.getName()).log(Level.SEVERE, null, ex);
           JOptionPane.showMessageDialog(null, ex.getMessage(), "Caution!", JOptionPane.INFORMATION_MESSAGE);
       }
       
       try {
           tryCount = 1;
           NewModel.defFile.setDecompScaleCount(String.valueOf(countLevelOneDicompWS()));
           System.out.println("Decomp Scale Count: " + NewModel.defFile.getDecompScaleCount().toString());
       } catch (Exception ex) {
           catchCount = 1;
           Logger.getLogger(mixregGUI.class.getName()).log(Level.SEVERE, null, ex);
           JOptionPane.showMessageDialog(null, ex.getMessage(), "Caution!", JOptionPane.INFORMATION_MESSAGE);
       }
       
           /* try {
                tryCount = 1;
                NewModel.defFile.setAdvancedEffectMeanWS("2");
                System.out.println("Advanced effects of mean on WS variance: " + NewModel.defFile.getDecompBSCount().toString());
            } catch (Exception ex) {
                catchCount = 1;
                Logger.getLogger(mixregGUI.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, ex.getMessage(), "Caution!", JOptionPane.INFORMATION_MESSAGE);
            } */
       
       }
       
       try {
           tryCount = 1;
           int MeanCount = countLevelOneBeta() + countLevelTwoBeta();
           
           NewModel.defFile.setModelMeanCount(String.valueOf(MeanCount));
           System.out.println("Model Mean Count: " + NewModel.defFile.getModelMeanCount().toString());
       } catch (Exception ex) {
           catchCount = 1;
           Logger.getLogger(mixregGUI.class.getName()).log(Level.SEVERE, null, ex);
           JOptionPane.showMessageDialog(null, ex.getMessage(), "Caution!", JOptionPane.INFORMATION_MESSAGE);
       }
       
       
       try {
           int LocRanCount = countLevelOneAlpha() + countLevelTwoAlpha();
           NewModel.defFile.setModelLocRanCount(String.valueOf(LocRanCount));
           System.out.println("Model Loc Ran Count: " + NewModel.defFile.getModelLocRanCount().toString());
           tryCount = 1;
       } catch (Exception ex) {
           catchCount = 1;
           Logger.getLogger(mixregGUI.class.getName()).log(Level.SEVERE, null, ex);
           JOptionPane.showMessageDialog(null, ex.getMessage(), "Caution!", JOptionPane.INFORMATION_MESSAGE);
       }
       
       
       try {
           tryCount = 1;
           int ScaleCount = countLevelOneTau() + countLevelTwoTau();
           NewModel.defFile.setModelScaleCount(String.valueOf(ScaleCount));
           System.out.println("Model Scale Count: " + NewModel.defFile.getModelLocRanCount().toString());
       } catch (Exception ex) {
           catchCount = 1;
           Logger.getLogger(mixregGUI.class.getName()).log(Level.SEVERE, null, ex);
           JOptionPane.showMessageDialog(null, ex.getMessage(), "Caution!", JOptionPane.INFORMATION_MESSAGE);
       }
       
       
       try {
           tryCount = 1;
           NewModel.defFile.setModelBetweenCount(String.valueOf(levelTwoRegSize));
           System.out.println("Model Between Count: " + NewModel.defFile.getModelBetweenCount().toString());
       } catch (Exception ex) {
           catchCount = 1;
           Logger.getLogger(mixregGUI.class.getName()).log(Level.SEVERE, null, ex);
           JOptionPane.showMessageDialog(null, ex.getMessage(), "Caution!", JOptionPane.INFORMATION_MESSAGE);
       }
       
       try {
           tryCount = 1;
           NewModel.defFile.setModelWithinCount(String.valueOf(levelOneRegSize));
           System.out.println("Model Within Count: " + NewModel.defFile.getModelBetweenCount().toString());
       } catch (Exception ex) {
           catchCount = 1;
           Logger.getLogger(mixregGUI.class.getName()).log(Level.SEVERE, null, ex);
           JOptionPane.showMessageDialog(null, ex.getMessage(), "Caution!", JOptionPane.INFORMATION_MESSAGE);
       }
       
       
       
       if (catchCount == 0){   
           int defTry = 0;
           int defCatch = 0;
            try {
                List<String> defFileOutput;
                
               defFileOutput =  NewModel.defFile.buildStageOneDefinitonList();
               
               for (int k = 0; k<defFileOutput.size(); k++){
                   System.out.println(defFileOutput.get(k));
               }
               
               
            } catch (Exception ex) {
                defCatch = 1;
                Logger.getLogger(mixregGUI.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, ex.getMessage(), "Caution!", JOptionPane.INFORMATION_MESSAGE);
            }
            
            if (defCatch == 0){
                 stageOneTabs.setSelectedIndex(3);
            }
           
        
       } else {
       
           // do nothing
       }
      
        

    }//GEN-LAST:event_runStageOneTwoButtonActionPerformed

    private void advancedOptionsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_advancedOptionsButtonActionPerformed
        // TODO add your handling code here:
        advancedOptions_view = new advancedOptions();
        
        advancedOptions_view.setVisible(true);
    }//GEN-LAST:event_advancedOptionsButtonActionPerformed

    private void addStageTwoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStageTwoButtonActionPerformed
        stage_2_regs = new stageTwoRegs();
        
        stage_2_regs.setVisible(true);
        stage_2_regs.updateStageTwoVariables(getSavedVariables());
    }//GEN-LAST:event_addStageTwoButtonActionPerformed

    private void addStageOneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStageOneButtonActionPerformed
        stageOneClicked = 1;
        addStageTwoButton.setEnabled(true);
        stage_1_regs = new stageOneRegs();
        stage_1_regs.setVisible(true);
        stage_1_regs.updateAllVariables();
    }//GEN-LAST:event_addStageOneButtonActionPerformed

    private void IDvariableComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDvariableComboActionPerformed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_IDvariableComboActionPerformed

    private void NoAssociationRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NoAssociationRadioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NoAssociationRadioActionPerformed

    private void StageOneVariableComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StageOneVariableComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_StageOneVariableComboActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mixregGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mixregGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mixregGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mixregGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //imageViewr-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mixregGUI().setVisible(true);
                
               
            }
        });
      
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> IDvariableCombo;
    private javax.swing.JRadioButton LinearAssociationRadio;
    private javax.swing.JRadioButton NoAssociationRadio;
    private javax.swing.JRadioButton QuadraticAssociationRadio;
    private javax.swing.JComboBox<String> StageOneVariableCombo;
    private javax.swing.JComboBox<String> StageTwoVariableCombo;
    private javax.swing.JButton addStageOneButton;
    private javax.swing.JButton addStageTwoButton;
    private javax.swing.JButton advancedOptionsButton;
    private javax.swing.JLabel associationLabel;
    private javax.swing.JPanel associationPanel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JMenuItem diagramMenu;
    private javax.swing.JMenuItem exitMenu;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JButton goBackMxrButton;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JPanel imageView;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JLabel level1_BSVar;
    private javax.swing.JLabel level1_MeanReg;
    private javax.swing.JLabel level1_WSVar;
    private javax.swing.JLabel level2_BSVar;
    private javax.swing.JLabel level2_MeanReg;
    private javax.swing.JLabel level2_WSVar;
    private javax.swing.JPanel levelOneGrid;
    private javax.swing.JPanel levelTwoGrid;
    private javax.swing.JMenuItem modifyStageOneMenu;
    private javax.swing.JMenuItem modifyStageTwoMenu;
    private javax.swing.JMenuItem newModelMenu;
    private javax.swing.JPanel parentPanel;
    private javax.swing.JButton resetButton;
    private javax.swing.JButton runStageOneTwoButton;
    private javax.swing.JLabel stage2_BSVar;
    private javax.swing.JLabel stage2_MeanReg;
    private javax.swing.JLabel stage2_WSVar;
    private javax.swing.JTabbedPane stageOneTabs;
    private javax.swing.JPanel stageTwoGrid;
    // End of variables declaration//GEN-END:variables

    
    
    public void isSubmitClicked(){
   
            parentPanel.removeAll();
            parentPanel.add(stageOneTabs);
            parentPanel.repaint();
            parentPanel.revalidate();
}
    
   public void updateComboBoxes(){
    
    
    for (int j=0; j<variableNamesCombo.length; j++){
        IDList.addElement(variableNamesCombo[j]);
        StageOneList.addElement(variableNamesCombo[j]);
        StageTwoList.addElement(variableNamesCombo[j]);
    }
    
    
    IDvariableCombo.setModel(IDList);
    IDvariableCombo.setSelectedIndex(0);
    
    StageOneVariableCombo.setModel(StageOneList);
    StageOneVariableCombo.setSelectedIndex(1);
    
    StageTwoVariableCombo.setModel(StageTwoList);
    StageTwoVariableCombo.setSelectedIndex(2);
}
   
   public static void openWebpage(String urlString) {
    try {
        Desktop.getDesktop().browse(new URL(urlString).toURI());
    } catch (Exception e) {
        e.printStackTrace();
    }
}
   
   public DefaultListModel<String> getSavedVariables(){
   
       savedVariablesStageOne = stage_1_regs.getListModel();
       
   return savedVariablesStageOne;
   
   }
   
   public void updateRegressors(DefaultComboBoxModel<String> levelOne, DefaultComboBoxModel<String> levelTwo){
   // delete this function
   
   }
   
   
   //get ID variable selected by the user
   public String getIDVariable(){
       String ID;
       
       ID = IDvariableCombo.getItemAt(IDvariableCombo.getSelectedIndex());
       
       return ID;
   
   }
   
   //get Stage One DV variable selected by the user
   public String getStageOneDV(){
       String StageOneDV;
       
       StageOneDV = StageOneVariableCombo.getItemAt(StageOneVariableCombo.getSelectedIndex());
       
       return StageOneDV;
   
   }
   
    //get Stage Two variable selected by the user
   public String getStageTwoDV(){
       String StageTwoDV;
       
       StageTwoDV = StageTwoVariableCombo.getItemAt(StageTwoVariableCombo.getSelectedIndex());
       
       return StageTwoDV;
   
   }
   
    
   public int getAssociationType(){
       
       int radioID = 0;
       
       if (NoAssociationRadio.isSelected() == true){
           radioID = 1;
       } else if (LinearAssociationRadio.isSelected() == true){
           radioID = 2;
       } else if (QuadraticAssociationRadio.isSelected() == true){
           radioID = 3;
       }
     
       return radioID;
   }
   
   
   public void updateLevelOneRegGrid(DefaultListModel<String> defaultListModel){
   
       int regSize = defaultListModel.getSize();
       levelOneRegSize = regSize;
      // System.out.println(String.valueOf(regSize) + " is the regSize");
       
       levelOneBoxes = new ArrayList<ArrayList<JCheckBox>>();
       
       levelOneGrid.removeAll();
       
       levelOneGrid.setLayout(new GridLayout(regSize, 4));
       
       
       levelOneGrid.setComponentOrientation(ComponentOrientation.LEFT_TO_RIGHT);
       
       for (int j=0; j<regSize; j++){
           levelOneGrid.add(new JLabel(defaultListModel.getElementAt(j)));
           //System.out.print(j);
           
          levelOneBoxes.add(j, new ArrayList<JCheckBox>());
           
           for(int k=0; k<4;k++){
                
                   levelOneBoxes.get(j).add(k, new JCheckBox());
                   levelOneGrid.add(levelOneBoxes.get(j).get(k));
                   //levelOneGrid.setBorder(BorderFactory.createLineBorder(Color.BLACK));
                   //levelOneGrid.setBorder(new MatteBorder(2,2,2,2, Color.BLACK));
      
                }
       }

   }
   
   public void updateLevelOneGrid_version2(DefaultListModel<String> defaultListModel){
   
       //levelOneGrid.setVisible(true);
       
       JScrollPane scrollpanel = new JScrollPane(levelOneGrid);
       
       int regSize = defaultListModel.getSize();
       levelOneRegSize = regSize;
       levelOneDisaggSize = regSize;
       
       levelOneGrid.removeAll();
       
       levelOneGrid.setLayout(new GridBagLayout());
       GridBagConstraints constraints = new GridBagConstraints();
       
       constraints.gridx = 0;
       constraints.gridy = 0;
       //constraints.weightx = 1.0;
       constraints.anchor = GridBagConstraints.NORTH;
       //constraints.gridwidth = 4;
       
            GridBagConstraints separatorConstraint = new GridBagConstraints();
            separatorConstraint.weightx = 1.0;
            separatorConstraint.fill = GridBagConstraints.HORIZONTAL;
            separatorConstraint.gridwidth = GridBagConstraints.REMAINDER;
            separatorConstraint.gridx=0;
       
       
       
       constraints.insets = new Insets(3,0,5,25);
       separatorConstraint.insets = new Insets(0,0,0,0);
       //constraints.fill = GridBagConstraints.HORIZONTAL;
       constraints.weightx = 1;
       
       levelOneBoxes = new ArrayList<ArrayList<JCheckBox>>();
       disaggVarianceBoxes = new ArrayList<ArrayList<JCheckBox>>();
       
       for (int j=0;j<regSize;j++){
           constraints.gridx = 0;
           constraints.anchor = GridBagConstraints.LINE_END;
           levelOneGrid.add(new JLabel(defaultListModel.getElementAt(j)), constraints);
           
            levelOneBoxes.add(j, new ArrayList<JCheckBox>());
                          
           
           for (int k=0; k<3;k++){
               
               constraints.gridx++;
               constraints.anchor = GridBagConstraints.CENTER;
               levelOneBoxes.get(j).add(k, new JCheckBox());
               levelOneGrid.add(levelOneBoxes.get(j).get(k), constraints);
           }
           
           constraints.gridy++;
           constraints.gridx = 0;
           constraints.anchor = GridBagConstraints.LINE_END;
           
           levelOneGrid.add(new JLabel("Disaggregate?"), constraints);
           disaggVarianceBoxes.add(j, new ArrayList<JCheckBox>());
           
           for(int k=0;k<3;k++){
               constraints.gridx++;
               constraints.anchor = GridBagConstraints.CENTER;
               
               disaggVarianceBoxes.get(j).add(k, new JCheckBox());
               levelOneGrid.add(disaggVarianceBoxes.get(j).get(k), constraints);

           }
           
           constraints.gridy++;
           //constraints.gridx = 0;
           separatorConstraint.gridy = separatorConstraint.gridy + 3;
           //System.out.println("before seperator");
           levelOneGrid.add(new JSeparator(JSeparator.HORIZONTAL), separatorConstraint);
           //System.out.println("after seperator");
           constraints.gridy++;
           
       }
       
       jPanel5.add(scrollpanel);
   
   }
   
   
   public void updateLevelTwoGrid_version2(DefaultListModel<String> defaultListModel){
   
       //levelTwoGrid.setVisible(true);
       
       JScrollPane scrollpanel = new JScrollPane(levelTwoGrid);
       
       int regSize = defaultListModel.getSize();
       levelTwoRegSize = regSize;
       
       levelTwoGrid.removeAll();
       
       levelTwoGrid.setLayout(new GridBagLayout());
       GridBagConstraints constraints = new GridBagConstraints();
       
       constraints.gridx = 0;
       constraints.gridy = 0;
       constraints.weightx = 1.0;
      // constraints.weighty = 1.0;
       constraints.anchor = GridBagConstraints.NORTH;
       //constraints.gridwidth = 4;
       
            GridBagConstraints separatorConstraint = new GridBagConstraints();
            separatorConstraint.weightx = 1.0;
            separatorConstraint.fill = GridBagConstraints.HORIZONTAL;
            separatorConstraint.gridwidth = GridBagConstraints.REMAINDER;
            separatorConstraint.gridx=0;
       
       
       
       constraints.insets = new Insets(3,0,5,25);
       separatorConstraint.insets = new Insets(0,0,0,0);
       //constraints.fill = GridBagConstraints.HORIZONTAL;
       constraints.weightx = 1;
       
       levelTwoBoxes = new ArrayList<ArrayList<JCheckBox>>();
       //disaggVarianceBoxes = new ArrayList<ArrayList<JCheckBox>>();
       
       for (int j=0;j<regSize;j++){
           constraints.gridx = 0;
           constraints.anchor = GridBagConstraints.LINE_END;
           levelTwoGrid.add(new JLabel(defaultListModel.getElementAt(j)), constraints);
           
            levelTwoBoxes.add(j, new ArrayList<JCheckBox>());
                          
           
           for (int k=0; k<3;k++){
               
               constraints.gridx++;
               constraints.anchor = GridBagConstraints.CENTER;
               levelTwoBoxes.get(j).add(k, new JCheckBox());
               levelTwoGrid.add(levelTwoBoxes.get(j).get(k), constraints);
           }
           
           constraints.gridy++;
           
           separatorConstraint.gridy = separatorConstraint.gridy + 2;
          // System.out.println("before seperator");
           levelTwoGrid.add(new JSeparator(JSeparator.HORIZONTAL), separatorConstraint);
          // System.out.println("after seperator");
           constraints.gridy++;
           
       }
       
       jPanel6.add(scrollpanel);
   
   }
   
   
   public void updateStageTwoGrid_version2(DefaultListModel<String> defaultListModel){
   
       //stageTwoGrid.setVisible(true);
       
       JScrollPane scrollpanel = new JScrollPane(stageTwoGrid);
       
       int regSize = defaultListModel.getSize();
       stageTwoRegSize = regSize;
       
       stageTwoGrid.removeAll();
       
       stageTwoGrid.setLayout(new GridBagLayout());
       GridBagConstraints constraints = new GridBagConstraints();
       
       constraints.gridx = 0;
       constraints.gridy = 0;
       constraints.weightx = 1.0;
      // constraints.weighty = 1.0;
       constraints.anchor = GridBagConstraints.NORTH;
       //constraints.gridwidth = 4;
       
            GridBagConstraints separatorConstraint = new GridBagConstraints();
            separatorConstraint.weightx = 1.0;
            separatorConstraint.fill = GridBagConstraints.HORIZONTAL;
            separatorConstraint.gridwidth = GridBagConstraints.REMAINDER;
            separatorConstraint.gridx=0;
       
       
       
       constraints.insets = new Insets(3,0,5,25);
       separatorConstraint.insets = new Insets(0,0,0,0);
       //constraints.fill = GridBagConstraints.HORIZONTAL;
       constraints.weightx = 1;
       
       stageTwoBoxes = new ArrayList<ArrayList<JCheckBox>>();
       //disaggVarianceBoxes = new ArrayList<ArrayList<JCheckBox>>();
       
       for (int j=0;j<regSize;j++){
           constraints.gridx = 0;
           constraints.anchor = GridBagConstraints.LINE_END;
           stageTwoGrid.add(new JLabel(defaultListModel.getElementAt(j)), constraints);
           
            stageTwoBoxes.add(j, new ArrayList<JCheckBox>());
                          
           
           for (int k=0; k<3;k++){
               
               constraints.gridx++;
               constraints.anchor = GridBagConstraints.CENTER;
               stageTwoBoxes.get(j).add(k, new JCheckBox());
               stageTwoGrid.add(stageTwoBoxes.get(j).get(k), constraints);
           }
           
           constraints.gridy++;
           
           separatorConstraint.gridy = separatorConstraint.gridy + 2;
           //System.out.println("before seperator");
           stageTwoGrid.add(new JSeparator(JSeparator.HORIZONTAL), separatorConstraint);
          // System.out.println("after seperator");
           constraints.gridy++;
           
       }
       
       jPanel7.add(scrollpanel);
   
   }
   
   public void updateLevelTwoRegGrid(DefaultListModel<String> defaultListModel){
   
       int regSize = defaultListModel.getSize();
       
       levelTwoBoxes = new ArrayList<ArrayList<JCheckBox>>();
       
       levelTwoRegSize = regSize;
       
       levelTwoGrid.removeAll();
       
       levelTwoGrid.setLayout(new GridLayout(regSize, 4, -1, -1));
       
       levelTwoGrid.setComponentOrientation(ComponentOrientation.LEFT_TO_RIGHT);
       
       for (int j=0; j<regSize; j++){
           levelTwoGrid.add(new JLabel(defaultListModel.getElementAt(j)));
           levelTwoBoxes.add(j, new ArrayList<JCheckBox>());
           
           for(int k=0; k<3;k++){
                
                   levelTwoBoxes.get(j).add(k, new JCheckBox());
                   levelTwoGrid.add(levelTwoBoxes.get(j).get(k));
      
                }
       
       }

   }
   
   public void updateStageTwoGrid(DefaultListModel<String> defaultListModel){
   
       int regSize = defaultListModel.getSize();
       stageTwoBoxes = new ArrayList<ArrayList<JCheckBox>>();
       stageTwoRegSize = regSize;
       
       stageTwoGrid.removeAll();
       stageTwoGrid.setLayout(new GridLayout(regSize, 4, -1, -1));
       
       stageTwoGrid.setComponentOrientation(ComponentOrientation.LEFT_TO_RIGHT);
       
       for (int j=0; j<regSize; j++){
           stageTwoGrid.add(new JLabel(defaultListModel.getElementAt(j)));
           stageTwoBoxes.add(j, new ArrayList<JCheckBox>());
           
           for(int k=0; k<3;k++){
                
                   stageTwoBoxes.get(j).add(k, new JCheckBox());
                   stageTwoGrid.add(stageTwoBoxes.get(j).get(k));
      
                }

       }

   }
   
   public int countLevelOneBeta(){
       
       int levelOneBeta = 0;
       
       for (int p = 0; p<levelOneRegSize; p++){
           
           if (levelOneBoxes.get(p).get(0).isSelected()){
           
               levelOneBeta = levelOneBeta+1;
           }
       }
   
   return levelOneBeta;
   
   }
   
   public int countLevelOneDicompMean(){
       int levelOneDisagg = 0;
       
       for (int p=0; p<levelOneRegSize; p++){
           
               if (disaggVarianceBoxes.get(p).get(0).isSelected()){
               levelOneDisagg = levelOneDisagg + 1;
           }
      
       }
   
       return levelOneDisagg;
   }
   
   public int countLevelOneDicompBS(){
       int levelOneDisagg = 0;
       
       for (int p=0; p<levelOneRegSize; p++){
           
               if (disaggVarianceBoxes.get(p).get(1).isSelected()){
               levelOneDisagg = levelOneDisagg + 1;
           }
      
       }
   
       return levelOneDisagg;
   }
   
   public int countLevelOneDicompWS(){
       int levelOneDisagg = 0;
       
       for (int p=0; p<levelOneRegSize; p++){
           
               if (disaggVarianceBoxes.get(p).get(2).isSelected()){
               levelOneDisagg = levelOneDisagg + 1;
           }
      
       }
   
       return levelOneDisagg;
   }
   
   
   public int countLevelTwoBeta(){
       
       int levelTwoBeta = 0;
       
       for (int p = 0; p<levelTwoRegSize; p++){
           
           if (levelTwoBoxes.get(p).get(0).isSelected()){
           
               levelTwoBeta = levelTwoBeta+1;
           }
       }
   
   return levelTwoBeta;
   
   }
   
   public int countStageTwoBeta(){
       
       int stageTwoBeta = 0;
       
       for (int p = 0; p<stageTwoRegSize; p++){
           
           if (stageTwoBoxes.get(p).get(0).isSelected()){
           
               stageTwoBeta = stageTwoBeta+1;
           }
       }
   
   return stageTwoBeta;
   
   }
   
   public int countLevelOneAlpha(){
       
       int levelOneAlpha = 0;
       
       for (int p = 0; p<levelOneRegSize; p++){
           
           if (levelOneBoxes.get(p).get(1).isSelected()){
           
               levelOneAlpha = levelOneAlpha+1;
           }
       }
   
   return levelOneAlpha;
   
   }
   
   
   public int countLevelTwoAlpha(){
       
       int levelTwoAlpha = 0;
       
       for (int p = 0; p<levelTwoRegSize; p++){
           
           if (levelTwoBoxes.get(p).get(1).isSelected()){
           
               levelTwoAlpha = levelTwoAlpha+1;
           }
       }
   
   return levelTwoAlpha;
   
   }
   
   public int countStageTwoAlpha(){
       
       int stageTwoAlpha = 0;
       
       for (int p = 0; p<stageTwoRegSize; p++){
           
           if (stageTwoBoxes.get(p).get(1).isSelected()){
           
               stageTwoAlpha = stageTwoAlpha+1;
           }
       }
   
   return stageTwoAlpha;
   
   }
   
   
   public int countLevelOneTau(){
       
       int levelOneTau = 0;
       
       for (int p = 0; p<levelOneRegSize; p++){
           
           if (levelOneBoxes.get(p).get(2).isSelected()){
           
               levelOneTau = levelOneTau+1;
           }
       }
   
   return levelOneTau;
   
   }
   
   public int countLevelTwoTau(){
       
       int levelTwoTau = 0;
       
       for (int p = 0; p<levelTwoRegSize; p++){
           
           if (levelTwoBoxes.get(p).get(2).isSelected()){
           
               levelTwoTau = levelTwoTau+1;
           }
       }
   
   return levelTwoTau;
   
   }
   
   
   public int countStageTwoTau(){
       
       int stageTwoTau = 0;
       
       for (int p = 0; p<stageTwoRegSize; p++){
           
           if (stageTwoBoxes.get(p).get(2).isSelected()){
           
               stageTwoTau = stageTwoTau+1;
           }
       }
   
   return stageTwoTau;
   
   }

   public void enableDisaggVariance(){
   
   for (int p=0; p<levelOneRegSize;p++){
       
       for(int k=0; k<3;k++){
   
       if (levelOneBoxes.get(p).get(k).isSelected()){
           disaggVarianceBoxes.get(p).get(k).setEnabled(true);
       } else {
           disaggVarianceBoxes.get(p).get(k).setEnabled(false);
       }
       }
   }
   }
   
  
   

   
}
